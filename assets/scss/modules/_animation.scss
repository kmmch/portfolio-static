/*========= タイピング風 ===============*/
.TextTyping {
    & span {
        display: none;
    }

    /*文字列後ろの線の設定*/
    &::after {
        content: "|";
        animation: typinganime .8s ease infinite;
    }
}

@keyframes typinganime{
	from{opacity:0}
	to{opacity:1}
}



/*========= ふわっと現れる ===============*/
/* その場で */
.fadeIn{
    animation-name:fadeInAnime;
    animation-duration:1s;
    animation-fill-mode:forwards;
    opacity:0;
    }
    
    @keyframes fadeInAnime{
        from {
            opacity: 0;
        }
    
        to {
            opacity: 1;
        }
}

/* 下から */
.fadeUp{
    animation-name:fadeUpAnime;
    animation-duration:0.5s;
    animation-fill-mode:forwards;
    opacity:0;

    /* スクロールをしたら出現する要素にはじめに透過0を指定　*/
    &Trigger {
        opacity: 0;
    }
}
@keyframes fadeUpAnime{
    from {
        opacity: 0;
        transform: translateY(100px);
    }
    
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 上から */

.fadeDown{
    animation-name:fadeDownAnime;
    animation-duration:0.5s;
    animation-fill-mode:forwards;
    opacity:0;
    /* スクロールをしたら出現する要素にはじめに透過0を指定　*/
    &Trigger {
        opacity: 0;
    }
}
    
@keyframes fadeDownAnime{
    from {
        opacity: 0;
        transform: translateY(-100px);
    }
    
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
    
/* 左から */
    
.fadeLeft{
    animation-name:fadeLeftAnime;
    animation-duration:0.5s;
    animation-fill-mode:forwards;
    opacity:0;
    /* スクロールをしたら出現する要素にはじめに透過0を指定　*/
    &Trigger {
        opacity: 0;
    }
}
    
@keyframes fadeLeftAnime{
    from {
        opacity: 0;
        transform: translateX(-100px);
    }
    
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
    
/* 右から */
    
.fadeRight{
    animation-name:fadeRightAnime;
    animation-duration:0.5s;
    animation-fill-mode:forwards;
    opacity:0;
    /* スクロールをしたら出現する要素にはじめに透過0を指定　*/
    &Trigger {
        opacity: 0;
    }
}
    
@keyframes fadeRightAnime{
    from {
        opacity: 0;
        transform: translateX(100px);
    }
    
    to {
        opacity: 1;
        transform: translateX(0);
    }
}


/*========= にゅーんと現れる ===============*/
/* 滑らかに変形して出現 */
.smooth{
	animation-name:smoothAnime;
	animation-duration:1s;
	animation-fill-mode:forwards;
    transform-origin:left;
	opacity:0;
}
@keyframes smoothAnime{
    from {
        transform:translate3d(0, 100%, 0) skewY(12deg);
        opacity:0;
    }

    to {
        transform:translate3d(0, 0, 0) skewY(0);
        opacity:1;
    }
}


/*==================================================
スタート時は要素自体を透過0にするためのopacity:0;を指定する
===================================*/
.box{
	opacity: 0;
}